apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: otel-ebpf
  labels:
    app: opentelemetry
    app.kubernetes.io/component: oteld-daemonset
spec:
  mode: daemonset
  serviceAccount: otelcontribcol
  image: docker.io/hrexed/otecol-ebpf-profile:0.125
  args:
    feature-gates: "service.profilesSupport"
  ports:
    - name: prometheus
      port: 9090
      targetPort: 9090
  securityContext:
    privileged: true
    runAsUser: 0
    runAsGroup: 0

  env:
    - name: CLUSTER_ID
      valueFrom:
        secretKeyRef:
          name: dynatrace
          key: clusterid
    - name: K8S_NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
    - name: DT_ENDPOINT
      valueFrom:
        secretKeyRef:
          name: dynatrace
          key: dynatrace_oltp_url
    - name: DT_API_TOKEN
      valueFrom:
        secretKeyRef:
          name: dynatrace
          key: dt_api_token
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: status.podIP
    - name: CLUSTERNAME
      valueFrom:
        secretKeyRef:
          name: dynatrace
          key: clustername
    - name: OTEL_SERVICE_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.labels['app.kubernetes.io/component']
    - name: OTEL_RESOURCE_ATTRIBUTES
      value: service.name=$(OTEL_SERVICE_NAME)
  volumeMounts:
    - mountPath: /var/log
      name: varlog
      readOnly: true
    - mountPath: /var/lib/docker/containers
      name: varlibdockercontainers
      readOnly: true
    - mountPath: /sys/fs/bpf
      mountPropagation: Bidirectional
      name: bpf-maps
    - mountPath: /procRoot
      name: host-proc
    - mountPath: /host/proc/sys/net
      name: host-proc-sys-net
    - mountPath: /host/proc/sys/kernel
      name: host-proc-sys-kernel
    - name: lib-modules
      mountPath: /lib/modules
      readOnly: true
    - name: tracefs
      mountPath: /sys/kernel/tracing
      readOnly: true
  volumes:
    - name: varlog
      hostPath:
        path: /var/log
    - name: varlibdockercontainers
      hostPath:
        path: /var/lib/docker/containers
    - hostPath:
        path: /sys/fs/bpf
      name: bpf-maps
    - hostPath:
        path: /proc
      name: host-proc
    - name: lib-modules
      hostPath:
        path: /lib/modules
    - name: host-proc-sys-kernel
      hostPath:
        path: /proc/sys/kernel
        type: Directory
    - name: host-proc-sys-net
      hostPath:
        path: /proc/sys/net
        type: Directory
    - name: tracefs
      hostPath:
        path: /sys/kernel/tracing


  config:
    receivers:
      profiling:
        SamplesPerSecond: 19




    processors:
      batch:
        send_batch_max_size: 1000
        timeout: 30s
        send_batch_size : 800






      k8sattributes:
        auth_type: "serviceAccount"
        passthrough: false

        extract:
          metadata:
            - k8s.pod.name
            - k8s.pod.uid
            - k8s.deployment.name
            - k8s.statefulset.name
            - k8s.daemonset.name
            - k8s.cronjob.name
            - k8s.namespace.name
            - k8s.node.name
            - k8s.cluster.uid
        pod_association:
          - sources:
              - from: resource_attribute
                name: k8s.pod.name
              - from: resource_attribute
                name: k8s.namespace.name
          # Pod labels which can be fetched via K8sattributeprocessor

      memory_limiter:
        check_interval: 1s
        limit_percentage: 70
        spike_limit_percentage: 30



    exporters:

      otlp:
        endpoint: otel-collector.default.svc.cluster.local:4317
        tls:
          insecure: true



    service:
      pipelines:
        profiles:
          receivers: [ profiling ]
          processors: [ memory_limiter,k8sattributes ]
          exporters: [ otlp ]





